services:
  web: 
    build:
      context: ./backend
      target: builder
    # flask requires SIGINT to stop gracefully
    # (default stop signal from Compose is SIGTERM)
    stop_signal: SIGINT
  proxy:
    image: nginx:latest
    ports:
      - "3000:3000"
      - "5173:5173"
      - "5434:5432"  # Maps PostgreSQL's default port to host
      - "5443:5443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt:/etc/letsencrypt
    restart: always
    depends_on:
      - web
      - backend
      - database

  backend:
    platform: linux/amd64
    build:
      context: .
      dockerfile: backend/Dockerfile.backend
    volumes:
      - ${COMPOSE_PROJECT_PATH:-.}:/app
      - /app/node_modules  # Ensures node_modules is created inside the container
    environment:
      - NODE_ENV=development
      - DB_HOST=database
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=postgres
    


  frontend:
    platform: linux/amd64
    build:
      context: .
      dockerfile: frontend/Dockerfile.frontend
    volumes:
      - ${COMPOSE_PROJECT_PATH:-.}:/app
      - /app/node_modules  # Ensures node_modules is created inside the container
    environment:
      - NODE_ENV=development
      

  database:
    image: postgres:17
    container_name: postgres_container
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:  # Ensures database is ready before backend starts
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 5
      timeout: 3s

volumes:
  postgres_data:
