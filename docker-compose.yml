services:
  backend:
    platform: linux/amd64
    env_file:
      - .env.development
    build:
      context: .
      dockerfile: backend/Dockerfile.backend
    ports:
      - "3000:3000"
    volumes:
      - ${COMPOSE_PROJECT_PATH:-.}:/app
      - /app/node_modules  # Ensures node_modules is created inside the container
    depends_on:
      database:
        condition: service_healthy


  frontend:
    platform: linux/amd64
    env_file:
      - .env.development
    build:
      context: .
      dockerfile: frontend/Dockerfile.frontend
    ports:
      - "5173:5173"
      - "80:80"     # For production
    volumes:
      - ${COMPOSE_PROJECT_PATH:-.}:/app
      - /app/node_modules  # Ensures node_modules is created inside the container
    depends_on:
      - backend

  database:
    image: postgres:17
    container_name: postgres_container
    env_file:
      - .env.development
    restart: always
    ports:
      - "5434:5432"  # Maps PostgreSQL's default port to host
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:  # Ensures database is ready before backend starts
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 5
      timeout: 3s

volumes:
  postgres_data: